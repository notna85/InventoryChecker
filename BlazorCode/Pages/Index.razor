@page "/"

@using InventoryChecker.Data
@using InventoryChecker.Interfaces
@using Microsoft.AspNetCore.ProtectedBrowserStorage @*--Used to store and retrieve certain values in the browser's memory in  order to access them across states--*@
@inject ProductService ProductDataService
@inject NavigationManager NavMan
@inject ProtectedSessionStorage ProtectedSession

<div style="width: 300px; margin: auto; padding-top: 20px">
    <label style="font-size: 20px; font-style: italic">Indtast adgangskode</label>
    <input class="form-control" type="password" maxlength="30" style="font-size: 20px; box-shadow: inset 2px 2px 5px #0005" @bind="InputtedPassword" />
    @if (PasswordError == true)
    {
    <div style="height: 40px; color: red; font-size: 20px; font-style: italic">*Forkert adgangskode!</div>
    }
    else
    {
    <div style="height: 40px"></div>
    }
    <div style="display: flex; justify-content: center">
        <button class="btn-ui btn-blue" style="margin-right: 10px" @onclick="ValidateLogin">Log på</button>
    </div>
</div>

@code
{
    public string InputtedPassword { get; set; } = "";
    public bool PasswordError { get; set; }

    protected override void OnInitialized()
    {
        InputtedPassword = "";
        base.OnInitialized();
    }

    private async Task ValidateLogin()
    {
        IHashing hash = new Hash256();
        string hashedPassword = hash.GenerateHash(InputtedPassword);

        if (ProductDataService.CheckLogin(hashedPassword, "App") == true)
        {
            await SetLoginStatus(true);
            NavMan.NavigateTo("categories");
        }
        else
        {
            PasswordError = true;
        }
    }
    private async Task SetLoginStatus(bool isLoggedIn)
    {
        await ProtectedSession.SetAsync("Login", isLoggedIn);
    }
}